{"version":3,"file":"Hangul.js","sources":["src/array/make.mjs","src/isCharCollection.mjs","src/array/assembleCompose.mjs","src/array/run.mjs","src/array/contains.mjs","src/array/isAll.mjs","src/unicode/Range.mjs","src/assertChar.mjs","src/is.mjs","src/unicode/blocks.mjs","src/unicode/characters.mjs","src/unicode/groups.mjs","src/unicode/complex.mjs","src/unicode/syllable.mjs","src/Result.mjs","src/composeComplex.mjs","src/unicode/mappings.mjs","src/transformer.mjs","src/composeAnyComplex.mjs","src/toStandard.mjs","src/composeSyllable.mjs","src/compose.mjs","src/assemble.mjs","src/decomposeSyllable.mjs","src/disassemble.mjs","src/main.js"],"sourcesContent":["export default (aryLike) => {\n  if (typeof aryLike === 'string') {\n    return aryLike.split``;\n  } if (!Array.isArray(aryLike)) {\n    throw new TypeError('aryLike must be a string or an array!');\n  }\n  return aryLike;\n};\n","export default ((aryLike) => {\n  if (Array.isArray(aryLike)) {\n    return true;\n  } if (typeof aryLike === 'string') {\n    return aryLike.length !== 1;\n  }\n  return false;\n});\n","import make from './make';\nimport isCharCollection from '../isCharCollection';\n\nconst fn = func => (aryLike) => {\n  if (arguments.length > 2) {\n    throw new Error('assembledComposes do not take more than one argument!');\n  }\n  const res = [];\n  let rem = make(aryLike);\n  const thisFn = fn(func);\n  while (rem.some(isCharCollection)) {\n    const subAryIdx = rem.findIndex(isCharCollection);\n    rem.splice(subAryIdx, 1, ...thisFn(aryLike[subAryIdx]));\n  }\n  while (rem.length) {\n    const comp = func(...rem);\n    res.push(comp.result);\n    rem = comp.remainder;\n  }\n  if (res.length === 1) {\n    return res[0];\n  }\n  return res;\n};\nexport default (fn);\n","// I mean, how am I supposed to describe this?\nimport make from './make';\n\nexport default (method => arg => aryLike => make(aryLike)[method](v => arg(v)));\n","import run from './run';\n\nexport default (run('some'));\n","import run from './run';\n\nexport default (run('every'));\n","export default class Range {\n  constructor(start, end) {\n    if (typeof (start + end) !== 'number') {\n      throw new TypeError('Both arguments to the Range constructor must be numbers!');\n    }\n    this.start = start;\n    this.end = end;\n    this.length = this.end - this.start + 1;\n  }\n\n  contains(num) {\n    return num >= this.start && num <= this.end;\n  }\n\n  forEach(fn) {\n    for (let i = this.start; i <= this.end; i++) {\n      fn(i);\n    }\n  }\n\n  map(fn) {\n    return Array(this.length).fill``.map((v, i) => fn(i + this.start));\n  }\n}\n","export default ((char) => {\n  if (typeof char !== 'string') {\n    throw new TypeError('char must be a string!');\n  } if (char.length - 1) {\n    throw new Error(`\"${char}\" is not a character!`);\n  }\n});\n","import Range from './unicode/Range';\nimport assertChar from './assertChar';\n\nexport default (range => (char) => {\n  assertChar(char);\n  if (range instanceof Range) {\n    return range.contains(char.codePointAt(0));\n  } if (Array.isArray(range)) {\n    return range.includes(char);\n  } if (typeof range === 'object') {\n    return !!range[char];\n  }\n  return false;\n});\n","import Range from './Range';\nimport is from '../is';\n\nexport const jamo = new Range(0x1100, 0x11FF);\nexport const compatibilityJamo = new Range(0x3130, 0x318F);\nexport const jamoExtendedA = new Range(0xA960, 0xA97F);\nexport const syllables = new Range(0xAC00, 0xD7AF);\nexport const jamoExtendedB = new Range(0xD7B0, 0xD7FF);\nexport const halfwidth = new Range(0xFFA0, 0xFFDF);\nexport const reserved = [\n  0x3130, 0x318F, // compatibilityJamo\n  new Range(0xA97D, 0xA97F), // jamoExtendedA\n  new Range(0xD7A4, 0xD7AF), // syllables\n  new Range(0xD7C7, 0xD7CA), // jamoExtendedB\n  new Range(0xD7FC, 0xD7FF), // jamoExtendedB\n];\nexport function isReserved(char) {\n  const code = char.codePointAt(0);\n  return reserved.includes(code) || reserved.filter(v => typeof v !== 'number').some(range => range.contains(code));\n}\nexport const isJamo = is(jamo);\nexport const isCompatibilityJamo = is(compatibilityJamo);\nexport const isJamoExtendedA = is(jamoExtendedA);\nexport const isSyllable = is(syllables);\nexport const isJamoExtendedB = is(jamoExtendedB);\nexport const isHalfwidth = is(halfwidth);\n","import is from '../is';\n\nconst consonants = {\n  ㄱ: 1,\n  ㄴ: 1,\n  ㄷ: 1,\n  ㄹ: 1,\n  ㅁ: 1,\n  ㅂ: 1,\n  ㅅ: 1,\n  ㅇ: 1,\n  ㅈ: 1,\n  ㅊ: 1,\n  ㅋ: 1,\n  ㅌ: 1,\n  ㅍ: 1,\n  ㅎ: 1,\n};\nconst vowels = {\n  ㅏ: 1,\n  ㅐ: 1,\n  ㅑ: 1,\n  ㅓ: 1,\n  ㅔ: 1,\n  ㅕ: 1,\n  ㅖ: 1,\n  ㅗ: 1,\n  ㅛ: 1,\n  ㅜ: 1,\n  ㅠ: 1,\n  ㅡ: 1,\n  ㅣ: 1,\n};\n// ['ㄱ', 'ㄴ', 'ㄷ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅅ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n// ['ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅛ', 'ㅜ', 'ㅠ', 'ㅡ', 'ㅣ'];\n// They're stored as objects so there's no need for iteration\n\nexport const isConsonant = is(consonants);\nexport const isVowel = is(vowels);\n","import * as blocks from './blocks';\n\nexport const isStandardHangul = char => blocks.isCompatibilityJamo(char) || blocks.isSyllable(char);\nexport const isHangul = char => (\n  isStandardHangul(char)\n  || blocks.isJamo(char)\n  || blocks.isJamoExtendedA(char)\n  || blocks.isJamoExtendedB(char)\n  || blocks.isHalfwidth(char)\n);\n","export const cho = {\n  // the characters that you can type with \"one\" key + shift\n  ㄱ: {\n    $: 'ㄱ',\n    ㄱ: 'ㄲ',\n  },\n  ㄷ: {\n    $: 'ㄷ',\n    ㄷ: 'ㄸ',\n  },\n  ㅅ: {\n    $: 'ㅅ',\n    ㅅ: 'ㅆ',\n  },\n  ㅈ: {\n    $: 'ㅈ',\n    ㅈ: 'ㅉ',\n  },\n  ㅂ: {\n    $: 'ㅂ',\n    ㅂ: 'ㅃ',\n  },\n};\nexport const jung = {\n  ㅗ: {\n    $: 'ㅗ',\n    ㅏ: 'ㅘ',\n    ㅐ: 'ㅙ',\n    ㅣ: 'ㅚ',\n  },\n  ㅜ: {\n    $: 'ㅜ',\n    ㅓ: 'ㅝ',\n    ㅔ: 'ㅞ',\n    ㅣ: 'ㅟ',\n  },\n  ㅡ: {\n    $: 'ㅡ',\n    ㅣ: 'ㅢ',\n  },\n};\nexport const jong = {\n  ㄱ: {\n    $: 'ㄱ',\n    ㄱ: 'ㄲ',\n    ㅅ: 'ㄳ',\n  },\n  ㄴ: {\n    $: 'ㄴ',\n    ㅈ: 'ㄵ',\n    ㅎ: 'ㄶ',\n  },\n  ㄹ: {\n    $: 'ㄹ',\n    ㄱ: 'ㄺ',\n    ㅁ: 'ㄻ',\n    ㅂ: 'ㄼ',\n    ㅅ: 'ㄽ',\n    ㅌ: 'ㄾ',\n    ㅍ: 'ㄿ',\n    ㅎ: 'ㅀ',\n  },\n  ㅂ: {\n    $: 'ㅂ',\n    ㅅ: 'ㅄ',\n  },\n  ㅅ: {\n    $: 'ㅅ',\n    ㅅ: 'ㅆ',\n  },\n};\nexport const irregular = {\n  is: 'irregular',\n  ㄴ: {\n    $: 'ㄴ',\n    ㄴ: 'ㅥ',\n    ㄷ: 'ㅦ',\n    ㅅ: 'ㅧ',\n    ㅿ: 'ㅨ',\n  },\n  ㄹ: {\n    $: 'ㄹ',\n    ㄱ: {\n      isComplex: true,\n      $: 'ㄺ',\n      ㅅ: 'ㅩ',\n    },\n    ㄷ: 'ㅪ',\n    ㅂ: {\n      isComplex: true,\n      $: 'ㄼ',\n      ㅅ: 'ㅫ',\n    },\n    ㅿ: 'ㅬ',\n    ㆆ: 'ㅭ',\n  },\n  ㅁ: {\n    $: 'ㅁ',\n    ㅂ: 'ㅮ',\n    ㅅ: 'ㅯ',\n    ㅿ: 'ㅰ',\n  },\n  ㅂ: {\n    $: 'ㅂ',\n    ㄱ: 'ㅲ',\n    ㄷ: 'ㅳ',\n    ㅅ: {\n      isComplex: true,\n      $: 'ㅄ',\n      ㄱ: 'ㅴ',\n      ㄷ: 'ㅵ',\n    },\n    ㅈ: 'ㅶ',\n    ㅌ: 'ㅷ',\n  },\n  ㅅ: {\n    $: 'ㅅ',\n    ㄱ: 'ㅺ',\n    ㄴ: 'ㅻ',\n    ㄷ: 'ㅼ',\n    ㅂ: 'ㅽ',\n    ㅈ: 'ㅾ',\n  },\n  ㅇ: {\n    $: 'ㅇ',\n    ㅇ: 'ㆀ',\n  },\n  ㆁ: {\n    $: 'ㆁ',\n    ㅅ: 'ㆁ',\n    ㅿ: 'ㅿ',\n  },\n  ㅎ: {\n    $: 'ㅎ',\n    ㅎ: 'ㆅ',\n  },\n  ㅛ: {\n    $: 'ㅛ',\n    ㅑ: 'ㆇ',\n    ㅒ: 'ㆈ',\n    ㅣ: 'ㆉ',\n  },\n  ㅠ: {\n    $: 'ㅠ',\n    ㅕ: 'ㆊ',\n    ㅖ: 'ㆋ',\n    ㅣ: 'ㆌ',\n  },\n  ㆍ: {\n    $: 'ㆍ',\n    ㅣ: 'ㆎ',\n  },\n};\n// this file is sure complex...\n","export const cho = [\n  'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ',\n  'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ',\n  'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ',\n];\nexport const choNum = {\n  ㄱ: 0,\n  ㄲ: 1,\n  ㄴ: 2,\n  ㄷ: 3,\n  ㄸ: 4,\n  ㄹ: 5,\n  ㅁ: 6,\n  ㅂ: 7,\n  ㅃ: 8,\n  ㅅ: 9,\n  ㅆ: 10,\n  ㅇ: 11,\n  ㅈ: 12,\n  ㅉ: 13,\n  ㅊ: 14,\n  ㅋ: 15,\n  ㅌ: 16,\n  ㅍ: 17,\n  ㅎ: 18,\n};\nexport const jung = [\n  'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ',\n  'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ', 'ㅚ', 'ㅛ', 'ㅜ',\n  'ㅝ', 'ㅞ', 'ㅟ', 'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ',\n];\nexport const jungNum = {\n  ㅏ: 0,\n  ㅐ: 1,\n  ㅑ: 2,\n  ㅒ: 3,\n  ㅓ: 4,\n  ㅔ: 5,\n  ㅕ: 6,\n  ㅖ: 7,\n  ㅗ: 8,\n  ㅘ: 9,\n  ㅙ: 10,\n  ㅚ: 11,\n  ㅛ: 12,\n  ㅜ: 13,\n  ㅝ: 14,\n  ㅞ: 15,\n  ㅟ: 16,\n  ㅠ: 17,\n  ㅡ: 18,\n  ㅢ: 19,\n  ㅣ: 20,\n};\nexport const jong = [\n  null, 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ',\n  'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ',\n  'ㄿ', 'ㅀ', 'ㅁ', 'ㅂ', 'ㅄ', 'ㅅ', 'ㅆ',\n  'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ',\n];\nexport const jongNum = {\n  ㄱ: 1,\n  ㄲ: 2,\n  ㄳ: 3,\n  ㄴ: 4,\n  ㄵ: 5,\n  ㄶ: 6,\n  ㄷ: 7,\n  ㄹ: 8,\n  ㄺ: 9,\n  ㄻ: 10,\n  ㄼ: 11,\n  ㄽ: 12,\n  ㄾ: 13,\n  ㄿ: 14,\n  ㅀ: 15,\n  ㅁ: 16,\n  ㅂ: 17,\n  ㅄ: 18,\n  ㅅ: 19,\n  ㅆ: 20,\n  ㅇ: 21,\n  ㅈ: 22,\n  ㅊ: 23,\n  ㅋ: 24,\n  ㅌ: 25,\n  ㅍ: 26,\n  ㅎ: 27,\n};\n","export default class Result {\n  constructor(result = '', remainder = []) {\n    this.result = result;\n    if (!Array.isArray(remainder)) {\n      throw new TypeError('The remainder of a new Result must be an array!');\n    }\n    this.remainder = remainder;\n  }\n}\n","import assertChar from './assertChar';\nimport { isAll } from './array';\nimport R from './Result';\n\nconst isAllString = isAll(v => typeof v === 'string');\nconst get$ = objList => (typeof objList[0] === 'string' ? objList[0] : objList[0].$);\nexport default (...objList) => (...ary) => {\n  let objects = objList.slice();\n  if (!objects.length) {\n    throw new Error('Cannot compose complex without a list of complex to compose!');\n  } if (ary.length < 2) {\n    return new R(ary[0]);\n  }\n  let i = 0;\n  let res = '';\n  while (i < ary.length) {\n    const currentChar = ary[i];\n    assertChar(currentChar);\n    const currentObjects = objects.map(obj => obj[currentChar]).filter(v => v);\n    if (!currentObjects.length) {\n      // the current char in the array cannot be attached to the previous\n      // characters to form a complex character\n      res = get$(objects);\n      if (!res) {\n        res = currentChar;\n        i++;\n      }\n      break;\n    } if (isAllString(currentObjects)) {\n      // if there's only one option to choose from\n      [res] = currentObjects;\n      i++;\n      break;\n    }\n    objects = currentObjects;\n    i++;\n    if (i === ary.length) {\n      res = get$(currentObjects);\n    }\n  }\n  return new R(res, ary.slice(i));\n};\n","// if you're gonna copy this part, at least give me credit.\n// I had to do all of this manually.\nexport const jamo = {\n  ᄀ: 'ㄱ',\n  ᄁ: ['ㄱ', 'ㄱ'],\n  ᄂ: 'ㄴ',\n  ᄃ: 'ㄷ',\n  ᄄ: ['ㄷ', 'ㄷ'],\n  ᄅ: 'ㄹ',\n  ᄆ: 'ㅁ',\n  ᄇ: 'ㅂ',\n  ᄈ: ['ㅂ', 'ㅂ'],\n  ᄉ: 'ㅅ',\n  ᄊ: ['ㅅ', 'ㅅ'],\n  ᄋ: 'ㅇ',\n  ᄌ: 'ㅈ',\n  ᄍ: ['ㅈ', 'ㅈ'],\n  ᄎ: 'ㅊ',\n  ᄏ: 'ㅋ',\n  ᄐ: 'ㅌ',\n  ᄑ: 'ㅍ',\n  ᄒ: 'ㅎ',\n  ᄓ: ['ㄴ', 'ㄱ'],\n  ᄔ: ['ㄴ', 'ㄴ'],\n  ᄕ: ['ㄴ', 'ㄷ'],\n  ᄖ: ['ㄴ', 'ㅂ'],\n  ᄗ: ['ㄷ', 'ㄱ'],\n  ᄘ: ['ㄹ', 'ㄴ'],\n  ᄙ: ['ㄹ', 'ㄹ'],\n  ᄚ: ['ㄹ', 'ㅎ'],\n  ᄛ: ['ㄹ', 'ㅇ'],\n  ᄜ: ['ㅁ', 'ㅂ'],\n  ᄝ: 'ㅱ',\n  ᄞ: ['ㅂ', 'ㄱ'],\n  ᄟ: ['ㅂ', 'ㄴ'],\n  ᄠ: ['ㅂ', 'ㄷ'],\n  ᄡ: ['ㅂ', 'ㅅ'],\n  ᄢ: ['ㅂ', 'ㅅ', 'ㄱ'],\n  ᄣ: ['ㅂ', 'ㅅ', 'ㄷ'],\n  ᄤ: ['ㅂ', 'ㅅ', 'ㅂ'],\n  ᄥ: ['ㅂ', 'ㅅ', 'ㅅ'],\n  ᄦ: ['ㅂ', 'ㅅ', 'ㅈ'],\n  ᄧ: ['ㅂ', 'ㅈ'],\n  ᄨ: ['ㅂ', 'ㅊ'],\n  ᄩ: ['ㅂ', 'ㅌ'],\n  ᄪ: ['ㅂ', 'ㅍ'],\n  ᄫ: 'ㅸ',\n  ᄬ: 'ㅹ',\n  ᄭ: ['ㅅ', 'ㄱ'],\n  ᄮ: ['ㅅ', 'ㄴ'],\n  ᄯ: ['ㅅ', 'ㄷ'],\n  ᄰ: ['ㅅ', 'ㄹ'],\n  ᄱ: ['ㅅ', 'ㅁ'],\n  ᄲ: ['ㅅ', 'ㅂ'],\n  ᄳ: ['ㅅ', 'ㅂ', 'ㄱ'],\n  ᄴ: ['ㅅ', 'ㅅ', 'ㅅ'],\n  ᄵ: ['ㅅ', 'ㅇ'],\n  ᄶ: ['ㅅ', 'ㅈ'],\n  ᄷ: ['ㅅ', 'ㅊ'],\n  ᄸ: ['ㅅ', 'ㅋ'],\n  ᄹ: ['ㅅ', 'ㅌ'],\n  ᄺ: ['ㅅ', 'ㅍ'],\n  ᄻ: ['ㅅ', 'ㅎ'],\n  ᄼ: null,\n  ᄽ: null,\n  ᄾ: null,\n  ᄿ: null,\n  ᅀ: 'ㅿ',\n  ᅁ: ['ㅇ', 'ㄱ'],\n  ᅂ: ['ㅇ', 'ㄷ'],\n  ᅃ: ['ㅇ', 'ㅁ'],\n  ᅄ: ['ㅇ', 'ㅂ'],\n  ᅅ: ['ㅇ', 'ㅅ'],\n  ᅆ: ['ㅇ', 'ㅿ'],\n  ᅇ: ['ㅇ', 'ㅇ'],\n  ᅈ: ['ㅇ', 'ㅈ'],\n  ᅉ: ['ㅇ', 'ㅊ'],\n  ᅊ: ['ㅇ', 'ㅌ'],\n  ᅋ: ['ㅇ', 'ㅍ'],\n  ᅌ: 'ㆁ',\n  ᅍ: ['ㅈ', 'ㅇ'],\n  ᅎ: null,\n  ᅏ: null,\n  ᅐ: null,\n  ᅑ: null,\n  ᅒ: ['ㅊ', 'ㅋ'],\n  ᅓ: ['ㅊ', 'ㅎ'],\n  ᅔ: null,\n  ᅕ: null,\n  ᅖ: ['ㅂ', 'ㅂ'],\n  ᅗ: 'ㆄ',\n  ᅘ: ['ㅎ', 'ㅎ'],\n  ᅙ: 'ㆆ',\n  ᅚ: ['ㄱ', 'ㄷ'],\n  ᅛ: ['ㄱ', 'ㅅ'],\n  ᅜ: ['ㄱ', 'ㅈ'],\n  ᅝ: ['ㄱ', 'ㅎ'],\n  ᅞ: ['ㄷ', 'ㄹ'],\n  ᅡ: 'ㅏ',\n  ᅢ: 'ㅐ',\n  ᅣ: 'ㅑ',\n  ᅤ: 'ㅒ',\n  ᅥ: 'ㅓ',\n  ᅦ: 'ㅔ',\n  ᅧ: 'ㅕ',\n  ᅨ: 'ㅖ',\n  ᅩ: 'ㅗ',\n  ᅪ: ['ㅗ', 'ㅏ'],\n  ᅫ: ['ㅗ', 'ㅐ'],\n  ᅬ: ['ㅗ', 'ㅣ'],\n  ᅭ: 'ㅛ',\n  ᅮ: 'ㅜ',\n  ᅯ: ['ㅜ', 'ㅓ'],\n  ᅰ: ['ㅜ', 'ㅔ'],\n  ᅱ: ['ㅜ', 'ㅣ'],\n  ᅲ: 'ㅠ',\n  ᅳ: 'ㅡ',\n  ᅴ: ['ㅡ', 'ㅣ'],\n  ᅵ: 'ㅣ',\n  ᅶ: ['ㅏ', 'ㅗ'],\n  ᅷ: ['ㅏ', 'ㅜ'],\n  ᅸ: ['ㅑ', 'ㅗ'],\n  ᅹ: ['ㅑ', 'ㅛ'],\n  ᅺ: ['ㅓ', 'ㅗ'],\n  ᅻ: ['ㅓ', 'ㅜ'],\n  ᅼ: ['ㅓ', 'ㅡ'],\n  ᅽ: ['ㅕ', 'ㅗ'],\n  ᅾ: ['ㅕ', 'ㅜ'],\n  ᅿ: ['ㅗ', 'ㅓ'],\n  ᆀ: ['ㅔ', 'ㅗ'],\n  ᆁ: ['ㅖ', 'ㅗ'],\n  ᆂ: ['ㅗ', 'ㅗ'],\n  ᆃ: ['ㅗ', 'ㅜ'],\n  ᆄ: ['ㅛ', 'ㅑ'],\n  ᆅ: ['ㅛ', 'ㅒ'],\n  ᆆ: ['ㅛ', 'ㅕ'],\n  ᆇ: ['ㅛ', 'ㅗ'],\n  ᆈ: ['ㅛ', 'ㅣ'],\n  ᆉ: ['ㅜ', 'ㅏ'],\n  ᆊ: ['ㅜ', 'ㅐ'],\n  ᆋ: ['ㅜ', 'ㅓ', 'ㅡ'],\n  ᆌ: ['ㅜ', 'ㅖ'],\n  ᆍ: ['ㅜ', 'ㅜ'],\n  ᆎ: ['ㅠ', 'ㅏ'],\n  ᆏ: ['ㅠ', 'ㅓ'],\n  ᆐ: ['ㅠ', 'ㅔ'],\n  ᆑ: ['ㅠ', 'ㅕ'],\n  ᆒ: ['ㅠ', 'ㅔ'],\n  ᆓ: ['ㅠ', 'ㅜ'],\n  ᆔ: ['ㅠ', 'ㅣ'],\n  ᆕ: ['ㅡ', 'ㅜ'],\n  ᆖ: ['ㅡ', 'ㅡ'],\n  ᆗ: ['ㅡ', 'ㅣ', 'ㅜ'],\n  ᆘ: ['ㅣ', 'ㅏ'],\n  ᆙ: ['ㅣ', 'ㅑ'],\n  ᆚ: ['ㅣ', 'ㅗ'],\n  ᆛ: ['ㅣ', 'ㅜ'],\n  ᆜ: ['ㅣ', 'ㅡ'],\n  ᆝ: null,\n  ᆞ: 'ㆍ',\n  ᆟ: ['ㆍ', 'ㅓ'],\n  ᆠ: ['ㆍ', 'ㅜ'],\n  ᆡ: ['ㆍ', 'ㅣ'],\n  ᆢ: ['ㆍ', 'ㆍ'],\n  ᆣ: ['ㅏ', 'ㅡ'],\n  ᆤ: ['ㅑ', 'ㅜ'],\n  ᆥ: ['ㅕ', 'ㅑ'],\n  ᆦ: ['ㅗ', 'ㅑ'],\n  ᆧ: ['ㅗ', 'ㅒ'],\n  ᆨ: 'ㄱ',\n  ᆩ: ['ㄱ', 'ㄱ'],\n  ᆪ: ['ㄱ', 'ㅅ'],\n  ᆫ: 'ㄴ',\n  ᆬ: ['ㄴ', 'ㅈ'],\n  ᆭ: ['ㄴ', 'ㅎ'],\n  ᆮ: 'ㄷ',\n  ᆯ: 'ㄹ',\n  ᆰ: ['ㄹ', 'ㄱ'],\n  ᆱ: ['ㄹ', 'ㅁ'],\n  ᆲ: ['ㄹ', 'ㅂ'],\n  ᆳ: ['ㄹ', 'ㅅ'],\n  ᆴ: ['ㄹ', 'ㅌ'],\n  ᆵ: ['ㄹ', 'ㅍ'],\n  ᆶ: ['ㄹ', 'ㅎ'],\n  ᆷ: 'ㅁ',\n  ᆸ: 'ㅂ',\n  ᆹ: ['ㅂ', 'ㅅ'],\n  ᆺ: 'ㅅ',\n  ᆻ: ['ㅅ', 'ㅅ'],\n  ᆼ: 'ㅇ',\n  ᆽ: 'ㅈ',\n  ᆾ: 'ㅊ',\n  ᆿ: 'ㅋ',\n  ᇀ: 'ㅌ',\n  ᇁ: 'ㅍ',\n  ᇂ: 'ㅎ',\n  ᇃ: ['ㄱ', 'ㄹ'],\n  ᇄ: ['ㄱ', 'ㅅ', 'ㄱ'],\n  ᇅ: ['ㄴ', 'ㄱ'],\n  ᇆ: ['ㄴ', 'ㄷ'],\n  ᇇ: ['ㄴ', 'ㅅ'],\n  ᇈ: ['ㄴ', 'ㅿ'],\n  ᇉ: ['ㄴ', 'ㅌ'],\n  ᇊ: ['ㄷ', 'ㄱ'],\n  ᇋ: ['ㄷ', 'ㄹ'],\n  ᇌ: ['ㄹ', 'ㄱ', 'ㅅ'],\n  ᇍ: ['ㄹ', 'ㄴ'],\n  ᇎ: ['ㄹ', 'ㄷ'],\n  ᇏ: ['ㄹ', 'ㄷ', 'ㅎ'],\n  ᇐ: ['ㄹ', 'ㄹ'],\n  ᇑ: ['ㄹ', 'ㅁ', 'ㄱ'],\n  ᇒ: ['ㄹ', 'ㅁ', 'ㅅ'],\n  ᇓ: ['ㄹ', 'ㅂ', 'ㅅ'],\n  ᇔ: ['ㄹ', 'ㅂ', 'ㅎ'],\n  ᇕ: ['ㄹ', 'ㅸ'],\n  ᇖ: ['ㄹ', 'ㅅ', 'ㅅ'],\n  ᇗ: ['ㄹ', ''],\n  ᇘ: ['ㄹ', 'ㅋ'],\n  ᇙ: ['ㄹ', 'ㆆ'],\n  ᇚ: ['ㅁ', 'ㄱ'],\n  ᇛ: ['ㅁ', 'ㄹ'],\n  ᇜ: ['ㅁ', 'ㅂ'],\n  ᇝ: ['ㅁ', 'ㅅ'],\n  ᇞ: ['ㅁ', 'ㅅ', 'ㅅ'],\n  ᇟ: ['ㅁ', 'ㅿ'],\n  ᇠ: ['ㅁ', 'ㅊ'],\n  ᇡ: ['ㅁ', 'ㅎ'],\n  ᇢ: 'ㅱ',\n  ᇣ: ['ㅂ', 'ㄹ'],\n  ᇤ: ['ㅂ', 'ㅍ'],\n  ᇥ: ['ㅂ', 'ㅎ'],\n  ᇦ: 'ㅸ',\n  ᇧ: ['ㅅ', 'ㄱ'],\n  ᇨ: ['ㅅ', 'ㄷ'],\n  ᇩ: ['ㅅ', 'ㄹ'],\n  ᇪ: ['ㅅ', 'ㅂ'],\n  ᇫ: 'ㅿ',\n  ᇬ: ['ㆁ', 'ㄱ'],\n  ᇭ: ['ㆁ', 'ㄱ', 'ㄱ'],\n  ᇮ: ['ㆁ', 'ㆁ'],\n  ᇯ: ['ㆁ', 'ㅋ'],\n  ᇰ: 'ㆁ',\n  ᇱ: ['ㆁ', 'ㅅ'],\n  ᇲ: ['ㆁ', 'ㅿ'],\n  ᇳ: ['ㅍ', 'ㅂ'],\n  ᇴ: 'ㆄ',\n  ᇵ: ['ㅎ', 'ㄴ'],\n  ᇶ: ['ㅎ', 'ㄹ'],\n  ᇷ: ['ㅎ', 'ㅁ'],\n  ᇸ: ['ㅎ', 'ㅂ'],\n  ᇹ: 'ㆆ',\n  ᇺ: ['ㄱ', 'ㄴ'],\n  ᇻ: ['ㄱ', 'ㅂ'],\n  ᇼ: ['ㄱ', 'ㅊ'],\n  ᇽ: ['ㄱ', 'ㅋ'],\n  ᇾ: ['ㄱ', 'ㅎ'],\n  ᇿ: ['ㄴ', 'ㄴ'],\n};\nexport const compatibilityJamo = {\n  // this object is missing a lot of characters in the block since\n  // this file maps archaic characters to compatibilityJamo.\n  ㄲ: ['ㄱ', 'ㄱ'],\n  ㄳ: ['ㄱ', 'ㅅ'],\n  ㄵ: ['ㄴ', 'ㅈ'],\n  ㄶ: ['ㄴ', 'ㅎ'],\n  ㄸ: ['ㄷ', 'ㄷ'],\n  ㄻ: ['ㄹ', 'ㅁ'],\n  ㄺ: ['ㄹ', 'ㄱ'],\n  ㄼ: ['ㄹ', 'ㅂ'],\n  ㄽ: ['ㄹ', 'ㅅ'],\n  ㄾ: ['ㄹ', 'ㅌ'],\n  ㄿ: ['ㄹ', 'ㅍ'],\n  ㅀ: ['ㄹ', 'ㅎ'],\n  ㅃ: ['ㅂ', 'ㅂ'],\n  ㅄ: ['ㅂ', 'ㅅ'],\n  ㅆ: ['ㅅ', 'ㅅ'],\n  ㅉ: ['ㅈ', 'ㅈ'],\n  ㅘ: ['ㅗ', 'ㅏ'],\n  ㅙ: ['ㅗ', 'ㅐ'],\n  ㅚ: ['ㅗ', 'ㅣ'],\n  ㅝ: ['ㅜ', 'ㅓ'],\n  ㅞ: ['ㅜ', 'ㅔ'],\n  ㅟ: ['ㅜ', 'ㅣ'],\n  ㅢ: ['ㅡ', 'ㅣ'],\n  ㅥ: ['ㄴ', 'ㄴ'],\n  ㅦ: ['ㄴ', 'ㄷ'],\n  ㅧ: ['ㄴ', 'ㅅ'],\n  ㅨ: ['ㄴ', 'ㅿ'],\n  ㅩ: ['ㄹ', 'ㄱ', 'ㅅ'],\n  ㅪ: ['ㄹ', 'ㄷ'],\n  ㅫ: ['ㄹ', 'ㅂ', 'ㅅ'],\n  ㅬ: ['ㄹ', 'ㅿ'],\n  ㅭ: ['ㄹ', 'ㆆ'],\n  ㅮ: ['ㅁ', 'ㅂ'],\n  ㅯ: ['ㅁ', 'ㅅ'],\n  ㅰ: ['ㅁ', 'ㅿ'],\n  ㅲ: ['ㅂ', 'ㄱ'],\n  ㅳ: ['ㅂ', 'ㄷ'],\n  ㅴ: ['ㅂ', 'ㅅ', 'ㄱ'],\n  ㅵ: ['ㅂ', 'ㅅ', 'ㄷ'],\n  ㅶ: ['ㅂ', 'ㅈ'],\n  ㅷ: ['ㅂ', 'ㅌ'],\n  ㅺ: ['ㅅ', 'ㄱ'],\n  ㅻ: ['ㅅ', 'ㄴ'],\n  ㅼ: ['ㅅ', 'ㄷ'],\n  ㅽ: ['ㅅ', 'ㅂ'],\n  ㅾ: ['ㅅ', 'ㅈ'],\n  ㆀ: ['ㅇ', 'ㅇ'],\n  ㆂ: ['ㆁ', 'ㅅ'],\n  ㆃ: ['ㆁ', 'ㅿ'],\n  ㆅ: ['ㅎ', 'ㅎ'],\n  ㆇ: ['ㅛ', 'ㅑ'],\n  ㆈ: ['ㅛ', 'ㅒ'],\n  ㆉ: ['ㅛ', 'ㅣ'],\n  ㆊ: ['ㅠ', 'ㅕ'],\n  ㆋ: ['ㅠ', 'ㅖ'],\n  ㆌ: ['ㅠ', 'ㅣ'],\n  ㆎ: ['ㆍ', 'ㅣ'],\n};\nexport const jamoExtendedA = {\n  ꥠ: ['ㄷ', 'ㅁ'],\n  ꥡ: ['ㄷ', 'ㅂ'],\n  ꥢ: ['ㄷ', 'ㅅ'],\n  ꥣ: ['ㄷ', 'ㅈ'],\n  ꥤ: ['ㄹ', 'ㄱ'],\n  ꥥ: ['ㄹ', 'ㄱ', 'ㄱ'],\n  ꥦ: ['ㄹ', 'ㄷ'],\n  ꥧ: ['ㄹ', 'ㄷ', 'ㄷ'],\n  ꥨ: ['ㄹ', 'ㅁ'],\n  ꥩ: ['ㄹ', 'ㅂ'],\n  ꥪ: ['ㄹ', 'ㅂ', 'ㅂ'],\n  ꥫ: ['ㄹ', 'ㅸ'],\n  ꥬ: ['ㄹ', 'ㅅ'],\n  ꥭ: ['ㄹ', 'ㅈ'],\n  ꥮ: ['ㄹ', 'ㅋ'],\n  ꥯ: ['ㅁ', 'ㄱ'],\n  ꥰ: ['ㅁ', 'ㄷ'],\n  ꥱ: ['ㅁ', 'ㅅ'],\n  ꥲ: ['ㅂ', 'ㅅ', 'ㅌ'],\n  ꥳ: ['ㅂ', 'ㅋ'],\n  ꥴ: ['ㅂ', 'ㅎ'],\n  ꥵ: ['ㅅ', 'ㅅ', 'ㅂ'],\n  ꥶ: ['ㅇ', 'ㄹ'],\n  ꥷ: ['ㅇ', 'ㅎ'],\n  ꥸ: ['ㅈ', 'ㅈ', 'ㅎ'],\n  ꥹ: ['ㅌ', 'ㅌ'],\n  ꥺ: ['ㅍ', 'ㅎ'],\n  ꥻ: ['ㅎ', 'ㅅ'],\n  ꥼ: ['ㆆ', 'ㆆ'],\n};\nexport const jamoExtendedB = {\n  ힰ: ['ㅗ', 'ㅕ'],\n  ힱ: ['ㅗ', 'ㅗ', 'ㅣ'],\n  ힲ: ['ㅛ', 'ㅏ'],\n  ힳ: ['ㅛ', 'ㅐ'],\n  ힴ: ['ㅛ', 'ㅓ'],\n  ힵ: ['ㅜ', 'ㅕ'],\n  ힶ: ['ㅜ', 'ㅣ', 'ㅣ'],\n  ힷ: ['ㅠ', 'ㅐ'],\n  ힸ: ['ㅠ', 'ㅗ'],\n  ힹ: ['ㅡ', 'ㅏ'],\n  ힺ: ['ㅡ', 'ㅓ'],\n  ힻ: ['ㅡ', 'ㅔ'],\n  ힼ: ['ㅡ', 'ㅗ'],\n  ힽ: ['ㅣ', 'ㅏ', 'ㅗ'],\n  ힾ: ['ㅣ', 'ㅒ'],\n  ힿ: ['ㅣ', 'ㅕ'],\n  ퟀ: ['ㅣ', 'ㅖ'],\n  ퟁ: ['ㅣ', 'ㅗ', 'ㅣ'],\n  ퟂ: ['ㅣ', 'ㅛ'],\n  ퟃ: ['ㅣ', 'ㅠ'],\n  ퟄ: ['ㅣ', 'ㅣ'],\n  ퟅ: ['ㆍ', 'ㅏ'],\n  ퟆ: ['ㆍ', 'ㅔ'],\n  ퟋ: ['ㄴ', ''],\n  ퟌ: ['ㄴ', ''],\n  ퟍ: ['ㄷ', 'ㄷ'],\n  ퟎ: ['ㄷ', 'ㄷ', 'ㅂ'],\n  ퟏ: ['ㄷ', 'ㅂ'],\n  ퟐ: ['ㄷ', 'ㅅ'],\n  ퟑ: ['ㄷ', 'ㅅ', 'ㄱ'],\n  ퟒ: ['ㄷ', 'ㅈ'],\n  ퟓ: ['ㄷ', 'ㅊ'],\n  ퟔ: ['ㄷ', 'ㅌ'],\n  ퟕ: ['ㄹ', 'ㄱ', 'ㄱ'],\n  ퟖ: ['ㄹ', 'ㄱ', 'ㅎ'],\n  ퟗ: ['ㄹ', 'ㄹ', 'ㅋ'],\n  ퟘ: ['ㄹ', 'ㅁ', 'ㅎ'],\n  ퟙ: ['ㄹ', 'ㅂ', 'ㄷ'],\n  ퟚ: ['ㄹ', 'ㅂ', 'ㅍ'],\n  ퟛ: ['ㄹ', 'ㆁ'],\n  ퟜ: ['ㄹ', 'ㆆ', 'ㅎ'],\n  ퟝ: null,\n  ퟞ: ['ㅁ', 'ㄴ'],\n  ퟟ: ['ㅁ', 'ㄴ', 'ㄴ'],\n  ퟠ: ['ㅁ', 'ㅁ'],\n  ퟡ: ['ㅁ', 'ㅂ', 'ㅅ'],\n  ퟢ: ['ㅁ', 'ㅈ'],\n  ퟣ: ['ㅂ', 'ㄷ'],\n  ퟤ: ['ㅂ', 'ㄹ', 'ㅍ'],\n  ퟥ: ['ㅂ', 'ㅁ'],\n  ퟦ: ['ㅂ', 'ㅂ'],\n  ퟧ: ['ㅂ', 'ㅅ', 'ㄷ'],\n  ퟨ: ['ㅂ', 'ㅈ'],\n  ퟩ: ['ㅂ', 'ㅊ'],\n  ퟪ: ['ㅅ', 'ㅁ'],\n  ퟫ: ['ㅅ', 'ㅸ'],\n  ퟬ: ['ㅅ', 'ㅅ', 'ㄱ'],\n  ퟭ: ['ㅅ', 'ㅅ', 'ㄷ'],\n  ퟮ: ['ㅅ', 'ㅿ'],\n  ퟯ: ['ㅅ', 'ㅈ'],\n  ퟰ: ['ㅅ', 'ㅊ'],\n  ퟱ: ['ㅅ', 'ㅌ'],\n  ퟲ: ['ㅅ', 'ㅎ'],\n  ퟳ: ['ㅿ', 'ㅂ'],\n  ퟴ: ['ㅿ', 'ㅸ'],\n  ퟵ: ['ㆁ', 'ㅁ'],\n  ퟶ: ['ㆁ', 'ㅎ'],\n  ퟷ: ['ㅈ', 'ㅂ'],\n  ퟸ: ['ㅈ', 'ㅂ', 'ㅂ'],\n  ퟹ: ['ㅈ', 'ㅈ'],\n  ퟺ: ['ㅍ', 'ㅅ'],\n  ퟻ: ['ㅍ', 'ㅌ'],\n};\nexport const halfwidth = {\n  ﾡ: 'ㄱ',\n  ﾢ: ['ㄱ', 'ㄱ'],\n  ﾣ: ['ㄱ', 'ㅅ'],\n  ﾤ: 'ㄴ',\n  ﾥ: ['ㄴ', 'ㅈ'],\n  ﾦ: ['ㄴ', 'ㅎ'],\n  ﾧ: 'ㄷ',\n  ﾨ: ['ㄷ', 'ㄷ'],\n  ﾩ: 'ㄹ',\n  ﾪ: ['ㄹ', 'ㄱ'],\n  ﾫ: ['ㄹ', 'ㅁ'],\n  ﾬ: ['ㄹ', 'ㅂ'],\n  ﾭ: ['ㄹ', 'ㅅ'],\n  ﾮ: ['ㄹ', 'ㅌ'],\n  ﾯ: ['ㄹ', 'ㅍ'],\n  ﾰ: ['ㄹ', 'ㅎ'],\n  ﾱ: 'ㅁ',\n  ﾲ: 'ㅂ',\n  ﾳ: ['ㅂ', 'ㅂ'],\n  ﾴ: ['ㅂ', 'ㅅ'],\n  ﾵ: 'ㅅ',\n  ﾶ: ['ㅅ', 'ㅅ'],\n  ﾷ: 'ㅇ',\n  ﾸ: 'ㅈ',\n  ﾹ: ['ㅈ', 'ㅈ'],\n  ﾺ: 'ㅊ',\n  ﾻ: 'ㅋ',\n  ﾼ: 'ㅌ',\n  ﾽ: 'ㅍ',\n  ﾾ: 'ㅎ',\n  ￂ: 'ㅏ',\n  ￃ: 'ㅐ',\n  ￄ: 'ㅑ',\n  ￅ: 'ㅒ',\n  ￆ: 'ㅓ',\n  ￇ: 'ㅔ',\n  ￊ: 'ㅕ',\n  ￋ: 'ㅖ',\n  ￌ: 'ㅗ',\n  ￍ: ['ㅗ', 'ㅏ'],\n  ￎ: ['ㅗ', 'ㅐ'],\n  ￏ: ['ㅗ', 'ㅣ'],\n  ￒ: 'ㅛ',\n  ￓ: 'ㅜ',\n  ￔ: ['ㅜ', 'ㅓ'],\n  ￕ: ['ㅜ', 'ㅔ'],\n  ￖ: ['ㅜ', 'ㅣ'],\n  ￗ: 'ㅠ',\n  ￚ: 'ㅡ',\n  ￛ: ['ㅡ', 'ㅣ'],\n  ￜ: 'ㅣ',\n};\nconst all = Object.assign({}, jamo, compatibilityJamo, jamoExtendedA, jamoExtendedB, halfwidth);\nexport default (all);\n","// tries to transform everything into disassembled standard hangul\nimport { make } from './array';\nimport { isSyllable } from './unicode/blocks';\nimport { isHangul } from './unicode/groups';\nimport mappings from './unicode/mappings';\n\nexport function transformChar(char) {\n  if (isHangul(char) && !isSyllable(char)) {\n    // this if-statement isn't REALLY needed\n    const comp = mappings[char];\n    if (comp) {\n      return comp;\n    }\n    return char;\n  }\n  return char;\n}\nexport default function transform(aryLike) {\n  const ary = make(aryLike);\n  return ary.map(transformChar);\n}\nexport function transformToString(str) {\n  return transform(str).flat();\n}\n","import {\n  cho,\n  jung,\n  jong,\n  irregular,\n} from './unicode/complex';\n\nimport composeComplex from './composeComplex';\n\nexport default (composeComplex(cho, jung, jong, irregular));\n","import { assembleCompose, make } from './array';\nimport { transformChar } from './transformer';\nimport composeAnyComplex from './composeAnyComplex';\n\nconst assembleAnyComplex = assembleCompose(composeAnyComplex);\nexport function toStandardChar(char) {\n  const v = transformChar(char);\n  if (Array.isArray(v)) {\n    return assembleAnyComplex(v);\n  }\n  return v;\n}\nexport default (aryLike => make(aryLike).map(toStandardChar));\n","import { choNum, jungNum, jongNum } from './unicode/syllable';\nimport { syllables } from './unicode/blocks';\nimport { toStandardChar } from './toStandard';\n// import Y from './ComposeGeneratorYield';\n\nexport const composeSyllableFn = (cho, jung, jong = 0) => (\n  String.fromCodePoint(cho * 588 + jung * 28 + jong + syllables.start)\n);\nexport default ((choChar, jungChar, jongChar = null) => {\n  const cho = choNum[toStandardChar(choChar)];\n  const jung = jungNum[toStandardChar(jungChar)];\n  // even though toStandardChar sometimes outputs an array\n  // there's no need to check since all we want are the\n  // sincle character standard characters.\n  if (!choChar && !jungChar) {\n    throw new Error('You must provide a cho and jung character to make a syllable');\n  }\n  let jong;\n  if (jongChar) {\n    jong = jongNum[toStandardChar(jongChar)];\n  }\n  if (!Number.isInteger(cho)) {\n    throw new Error(`\"${choChar}\" is not a valid cho character`);\n  } if (!Number.isInteger(jung)) {\n    throw new Error(`\"${jungChar}\" is not a valid jung character`);\n  } if (jong) {\n    throw new Error(`\"${jongChar}\" is not a valid jong character`);\n  }\n  return composeSyllableFn(cho, jung, jong);\n});\n","import * as complex from './unicode/complex';\nimport { choNum, jungNum, jongNum } from './unicode/syllable';\nimport composeComplex from './composeComplex';\nimport { composeSyllableFn } from './composeSyllable';\nimport R from './Result';\n\nconst composeStandardComplex = composeComplex(complex.cho, complex.jung, complex.jong);\n\nexport default ((...ary) => {\n  if (ary.length < 2) {\n    return new R(ary[0]);\n  }\n  const choRes = composeStandardComplex(...ary);\n  const choChar = choRes.result;\n  const cho = choNum[choChar];\n  if (!Number.isInteger(cho)) {\n    return choRes;\n  }\n  const jungRes = composeStandardComplex(...choRes.remainder);\n  const jungChar = jungRes.result;\n  const jung = jungNum[jungChar];\n  if (!Number.isInteger(jung)) {\n    return new R(choChar, [jungChar, ...jungRes.remainder]);\n  }\n  const jongRes = composeStandardComplex(...jungRes.remainder);\n  const jongChar = jongRes.result;\n  const jong = jongNum[jongChar];\n  if (!jong) {\n    return new R(composeSyllableFn(cho, jung), [jongChar, ...jungRes.remainder]);\n  }\n  return new R(composeSyllableFn(cho, jung, jong), jongRes.remainder);\n});\n","import { assembleCompose, make } from './array';\nimport compose from './compose';\n\nconst assembleAnything = assembleCompose(compose);\nexport default (aryLike => assembleAnything(make(aryLike)).join``);\n","import assertChar from './assertChar';\nimport { isSyllable, syllables } from './unicode/blocks';\nimport { cho, jung, jong } from './unicode/syllable';\n\nexport default ((syllable) => {\n  assertChar(syllable);\n  if (!isSyllable(syllable)) {\n    throw new Error('Decomposing a syllable requires a syllable to decompose!');\n  }\n  const code = syllable.codePointAt(0) - syllables.start;\n  const jongNum = code % 28;\n  const q = (code - jongNum) / 28;\n  const jungNum = q % 21;\n  const choNum = 0 | q / 21;\n  return [cho[choNum], jung[jungNum], jong[jongNum]].filter(v => v);\n});\n","import { make } from './array';\nimport { isSyllable } from './unicode/blocks';\nimport { cho } from './unicode/complex';\nimport composeComplex from './composeComplex';\nimport decomposeSyllable from './decomposeSyllable';\nimport transform, { transformChar } from './transformer';\n\nconst composeComplexCho = composeComplex(cho);\n\nexport default ((aryLike, grouped, disassembleCho) => {\n  const ary = make(aryLike).map((char) => {\n    const isSyl = isSyllable(char);\n    let charGroups;\n    if (isSyl) {\n      charGroups = transform(decomposeSyllable(char));\n    } else {\n      charGroups = [make(transformChar(char))];\n    }\n    if (!disassembleCho) {\n      charGroups = charGroups.map((charGroup) => {\n        if (Array.isArray(charGroup)) {\n          const comp = composeComplexCho(...charGroup);\n          if (!comp.remainder.length) {\n            return comp.result;\n          }\n          return charGroup;\n        }\n        return charGroup;\n      });\n    }\n    return isSyl ? charGroups : charGroups[0];\n  });\n  if (grouped) {\n    return ary;\n  }\n  return ary.flat(2);\n});\n","// I know I can export everything at once,\n// I just don't like to because during development\n// I have to adjust the export names and stuff so\n// it's better if it's organized\n\nimport { isAll, contains } from './array';\n\nimport { isSyllable } from './unicode/blocks';\nimport { isConsonant, isVowel } from './unicode/characters';\nimport { isHangul, isStandardHangul } from './unicode/groups';\n\nimport assemble from './assemble';\nimport compose from './compose';\nimport composeAnyComplex from './composeAnyComplex';\nimport composeSyllable from './composeSyllable';\nimport decomposeSyllable from './decomposeSyllable';\nimport disassemble from './disassemble';\nimport toStandard, { toStandardChar } from './toStandard';\nimport transform, { transformChar } from './transformer';\n\nexport const isAllHangul = isAll(isHangul);\nexport const isAllStandardHangul = isAll(isStandardHangul);\nexport const containsStandardHangul = contains(isStandardHangul);\nexport const containsHangul = contains(isHangul);\n\nexport { isSyllable };\nexport { isConsonant, isVowel };\nexport { isHangul, isStandardHangul };\n\nexport { assemble };\nexport { compose };\nexport { composeAnyComplex as composeComplex };\nexport { composeSyllable };\nexport { decomposeSyllable };\nexport { disassemble };\nexport { toStandard, toStandardChar };\nexport { transform, transformChar };\n"],"names":["blocks.isCompatibilityJamo","blocks.isSyllable","blocks.isJamo","blocks.isJamoExtendedA","blocks.isJamoExtendedB","blocks.isHalfwidth","cho","jung","jong","R","jamo","compatibilityJamo","jamoExtendedA","jamoExtendedB","halfwidth","mappings","assembleCompose","complex.cho","complex.jung","complex.jong","jongNum","jungNum","choNum"],"mappings":"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AAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC;EACd,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,CAAC,CAAC;AACF,EAAO,MAAMC,mBAAiB,GAAG;EACjC;EACA;EACA,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,E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,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC;EACd,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC;EACd,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,CAAC,CAAC;AACF,EAAO,MAAMC,WAAS,GAAG;EACzB,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CA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"}