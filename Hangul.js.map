{"version":3,"file":"Hangul.js","sources":["src/unicode/Range.mjs","src/assertChar.mjs","src/is.mjs","src/unicode/blocks.mjs","src/unicode/characters.mjs","src/array/makeAry.mjs","src/array/runAry.mjs","src/array/contains.mjs","src/array/isAll.mjs","src/unicode/groups.mjs","src/unicode/complex.mjs","src/composeComplex.mjs","src/unicode/syllable.mjs","src/ComposeGeneratorYield.mjs","src/composeSyllable.mjs","src/decomposeSyllable.mjs","src/fuel.mjs","src/unicode/mappings.mjs","src/transformer.mjs","src/main.js"],"sourcesContent":["export default class Range {\n  constructor(start, end) {\n    if (typeof (start + end) !== 'number') {\n      throw new TypeError('Both arguments to the Range constructor must be numbers!');\n    }\n    this.start = start;\n    this.end = end;\n    this.length = this.end - this.start + 1;\n  }\n\n  contains(num) {\n    return num >= this.start && num <= this.end;\n  }\n\n  forEach(fn) {\n    for (let i = this.start; i <= this.end; i++) {\n      fn(i);\n    }\n  }\n\n  map(fn) {\n    return Array(this.length).fill``.map((v, i) => fn(i + this.start));\n  }\n}\n","export default ((char) => {\n  if (typeof char !== 'string') {\n    throw new TypeError('char must be a string!');\n  } if (char.length - 1) {\n    throw new Error(`\"${char}\" must have a length of one!`);\n  }\n});\n","import Range from './unicode/Range';\nimport assertChar from './assertChar';\n\nexport default (range => (char) => {\n  assertChar(char);\n  if (range instanceof Range) {\n    return range.contains(char.codePointAt(0));\n  } if (Array.isArray(range)) {\n    return range.includes(char);\n  } if (typeof range === 'object') {\n    return !!range[char];\n  }\n  return false;\n});\n","import Range from './Range';\nimport is from '../is';\n\nexport const jamo = new Range(0x1100, 0x11FF);\nexport const compatibilityJamo = new Range(0x3130, 0x318F);\nexport const jamoExtendedA = new Range(0xA960, 0xA97F);\nexport const syllables = new Range(0xAC00, 0xD7AF);\nexport const jamoExtendedB = new Range(0xD7B0, 0xD7FF);\nexport const halfwidth = new Range(0xFFA0, 0xFFDF);\nexport const reserved = [\n  0x3130, 0x318F, // compatibilityJamo\n  new Range(0xA97D, 0xA97F), // jamoExtendedA\n  new Range(0xD7A4, 0xD7AF), // syllables\n  new Range(0xD7C7, 0xD7CA), // jamoExtendedB\n  new Range(0xD7FC, 0xD7FF), // jamoExtendedB\n];\nexport function isReserved(char) {\n  const code = char.codePointAt(0);\n  return reserved.includes(code) || reserved.filter(v => typeof v !== 'number').some(range => range.contains(code));\n}\nexport const isJamo = is(jamo);\nexport const isCompatibilityJamo = is(compatibilityJamo);\nexport const isJamoExtendedA = is(jamoExtendedA);\nexport const isSyllable = is(syllables);\nexport const isJamoExtendedB = is(jamoExtendedB);\nexport const isHalfwidth = is(halfwidth);\n","import is from '../is';\n\nconst consonants = {\n  ㄱ: 1,\n  ㄴ: 1,\n  ㄷ: 1,\n  ㄹ: 1,\n  ㅁ: 1,\n  ㅂ: 1,\n  ㅅ: 1,\n  ㅇ: 1,\n  ㅈ: 1,\n  ㅊ: 1,\n  ㅋ: 1,\n  ㅌ: 1,\n  ㅍ: 1,\n  ㅎ: 1,\n};\nconst vowels = {\n  ㅏ: 1,\n  ㅐ: 1,\n  ㅑ: 1,\n  ㅓ: 1,\n  ㅔ: 1,\n  ㅕ: 1,\n  ㅖ: 1,\n  ㅗ: 1,\n  ㅛ: 1,\n  ㅜ: 1,\n  ㅠ: 1,\n  ㅡ: 1,\n  ㅣ: 1,\n};\n// ['ㄱ', 'ㄴ', 'ㄷ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅅ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n// ['ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅛ', 'ㅜ', 'ㅠ', 'ㅡ', 'ㅣ'];\n// They're stored as objects so there's no need for iteration\n\nexport const isConsonant = is(consonants);\nexport const isVowel = is(vowels);\n","export default (aryLike) => {\n  if (typeof aryLike === 'string') {\n    return aryLike.split``;\n  } if (!Array.isArray(aryLike)) {\n    throw new TypeError('aryLike must be a string or an array!');\n  }\n  return aryLike;\n};\n","// I mean, how am I supposed to describe this?\nimport makeAry from './makeAry';\n\nexport default (method => arg => aryLike => makeAry(aryLike)[method](v => arg(v)));\n","import runAry from './runAry';\n\nexport default (runAry('some'));\n","import runAry from './runAry';\n\nexport default (runAry('every'));\n","import * as blocks from './blocks';\nimport { contains, isAll } from '../array';\n\nexport const isStandardHangul = char => blocks.isCompatibilityJamo(char) || blocks.isSyllable(char);\nexport const isHangul = char => (\n  isStandardHangul(char)\n  || blocks.isJamo(char)\n  || blocks.isJamoExtendedA(char)\n  || blocks.isJamoExtendedB(char)\n  || blocks.isHalfwidth(char)\n);\nexport const isAllHangul = isAll(isHangul);\nexport const isAllStandardHangul = isAll(isStandardHangul);\nexport const containsStandardHangul = contains(isStandardHangul);\nexport const containsHangul = contains(isHangul);\n","export const double = {\n  // the characters that you can type with \"one\" key + shift\n  ㄱ: 'ㄲ',\n  ㄷ: 'ㄸ',\n  ㅅ: 'ㅆ',\n  ㅈ: 'ㅉ',\n  ㅂ: 'ㅃ',\n};\nexport const complex = {\n  // consonants\n  ㄱ: {\n    ㄱ: 'ㄲ',\n    ㅅ: 'ㄳ',\n  },\n  ㄴ: {\n    ㅈ: 'ㄵ',\n    ㅎ: 'ㄶ',\n  },\n  ㄷ: {\n    ㄷ: 'ㄸ',\n  },\n  ㄹ: {\n    ㄱ: 'ㄺ',\n    ㅁ: 'ㄻ',\n    ㅂ: 'ㄼ',\n    ㅅ: 'ㄽ',\n    ㅌ: 'ㄾ',\n    ㅍ: 'ㄿ',\n    ㅎ: 'ㅀ',\n  },\n  ㅂ: {\n    ㅂ: 'ㅃ',\n    ㅅ: 'ㅄ',\n  },\n  ㅅ: {\n    ㅅ: 'ㅆ',\n  },\n  ㅈ: {\n    ㅈ: 'ㅉ',\n  },\n  // vowels\n  ㅗ: {\n    ㅏ: 'ㅘ',\n    ㅐ: 'ㅙ',\n    ㅣ: 'ㅚ',\n  },\n  ㅜ: {\n    ㅓ: 'ㅝ',\n    ㅔ: 'ㅞ',\n    ㅣ: 'ㅟ',\n  },\n  ㅡ: {\n    ㅣ: 'ㅢ',\n  },\n};\nexport const irregular = {\n  ㄴ: {\n    ㄴ: 'ㅥ',\n    ㄷ: 'ㅦ',\n    ㅅ: 'ㅧ',\n    ㅿ: 'ㅨ',\n  },\n  ㄹ: {\n    ㄱ: {\n      ㅅ: 'ㅩ',\n    },\n    ㄷ: 'ㅪ',\n    ㅂ: {\n      ㅅ: 'ㅫ',\n    },\n    ㅿ: 'ㅬ',\n    ㆆ: 'ㅭ',\n  },\n  ㅁ: {\n    ㅂ: 'ㅮ',\n    ㅅ: 'ㅯ',\n    ㅿ: 'ㅰ',\n  },\n  ㅂ: {\n    ㄱ: 'ㅲ',\n    ㄷ: 'ㅳ',\n    ㅅ: {\n      ㄱ: 'ㅴ',\n      ㄷ: 'ㅵ',\n    },\n    ㅈ: 'ㅶ',\n    ㅌ: 'ㅷ',\n  },\n  ㅅ: {\n    ㄱ: 'ㅺ',\n    ㄴ: 'ㅻ',\n    ㄷ: 'ㅼ',\n    ㅂ: 'ㅽ',\n    ㅈ: 'ㅾ',\n  },\n  ㅇ: {\n    ㅇ: 'ㆀ',\n  },\n  ㆁ: {\n    ㅅ: 'ㆁ',\n    ㅿ: 'ㅿ',\n  },\n  ㅎ: {\n    ㅎ: 'ㆅ',\n  },\n  ㅛ: {\n    ㅑ: 'ㆇ',\n    ㅒ: 'ㆈ',\n    ㅣ: 'ㆉ',\n  },\n  ㅠ: {\n    ㅕ: 'ㆊ',\n    ㅖ: 'ㆋ',\n    ㅣ: 'ㆌ',\n  },\n  ㆍ: {\n    ㅣ: 'ㆎ',\n  },\n};\n","import assertChar from './assertChar';\nimport { complex, irregular } from './unicode/complex';\n// import fuel from './fuel';\n\nexport default function* gen(includeIrregular = false) {\n  let objList = [complex];\n  if (includeIrregular) {\n    objList.push(irregular);\n  }\n  while (true) {\n    const currentChar = yield objList;\n    if (currentChar === null) {\n      return objList[0];\n    }\n    assertChar(currentChar);\n    const currentCharObj = objList.map(obj => obj[currentChar]).filter(v => v);\n    if (currentCharObj.length === 1 && typeof currentCharObj[0] === 'string') {\n      return currentCharObj[0];\n    } if (!currentCharObj.length) {\n      return `${objList[0].$ || ''}${currentChar}`;\n    }\n    objList = currentCharObj;\n  }\n}\n// export const composeAnyComplex = (fuel(gen, true));\n","export const cho = [\n  'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ',\n  'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ',\n  'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ',\n];\nexport const choNum = {\n  ㄱ: 0,\n  ㄲ: 1,\n  ㄴ: 2,\n  ㄷ: 3,\n  ㄸ: 4,\n  ㄹ: 5,\n  ㅁ: 6,\n  ㅂ: 7,\n  ㅃ: 8,\n  ㅅ: 9,\n  ㅆ: 10,\n  ㅇ: 11,\n  ㅈ: 12,\n  ㅉ: 13,\n  ㅊ: 14,\n  ㅋ: 15,\n  ㅌ: 16,\n  ㅍ: 17,\n  ㅎ: 18,\n};\nexport const jung = [\n  'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ',\n  'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ', 'ㅚ', 'ㅛ', 'ㅜ',\n  'ㅝ', 'ㅞ', 'ㅟ', 'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ',\n];\nexport const jungNum = {\n  ㅏ: 0,\n  ㅐ: 1,\n  ㅑ: 2,\n  ㅒ: 3,\n  ㅓ: 4,\n  ㅔ: 5,\n  ㅕ: 6,\n  ㅖ: 7,\n  ㅗ: 8,\n  ㅘ: 9,\n  ㅙ: 10,\n  ㅚ: 11,\n  ㅛ: 12,\n  ㅜ: 13,\n  ㅝ: 14,\n  ㅞ: 15,\n  ㅟ: 16,\n  ㅠ: 17,\n  ㅡ: 18,\n  ㅢ: 19,\n  ㅣ: 20,\n};\nexport const jong = [\n  null, 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ',\n  'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ',\n  'ㄿ', 'ㅀ', 'ㅁ', 'ㅂ', 'ㅄ', 'ㅅ', 'ㅆ',\n  'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ',\n];\nexport const jongNum = {\n  null: null,\n  undefined: null,\n  ㄱ: 1,\n  ㄲ: 2,\n  ㄳ: 3,\n  ㄴ: 4,\n  ㄵ: 5,\n  ㄶ: 6,\n  ㄷ: 7,\n  ㄹ: 8,\n  ㄺ: 9,\n  ㄻ: 10,\n  ㄼ: 11,\n  ㄽ: 12,\n  ㄾ: 13,\n  ㄿ: 14,\n  ㅀ: 15,\n  ㅁ: 16,\n  ㅂ: 17,\n  ㅄ: 18,\n  ㅅ: 19,\n  ㅆ: 20,\n  ㅇ: 21,\n  ㅈ: 22,\n  ㅊ: 23,\n  ㅋ: 24,\n  ㅌ: 25,\n  ㅍ: 26,\n  ㅎ: 27,\n};\n","export default class ComposeGeneratorYield {\n  constructor(result = '', remainder = []) {\n    this.result = result;\n    this.remainder = remainder;\n  }\n}\n","import { choNum, jungNum, jongNum } from './unicode/syllable';\nimport { syllables } from './unicode/blocks';\nimport Y from './ComposeGeneratorYield';\n\nconst composeSyllableFn = (cho, jung, jong = 0) => (\n  String.fromCodePoint(cho * 588 + jung * 28 + jong + syllables.start)\n);\nexport default function* () {\n  const choChar = yield;\n  const cho = choNum[choChar];\n  if (!Number.isInteger(cho)) {\n    return new Y('', choChar);\n  }\n  const jungChar = yield new Y(choChar);\n  const jung = jungNum[jungChar];\n  if (!Number.isInteger(jung)) {\n    return new Y(choChar, jungChar);\n  }\n  const maybeComplete = composeSyllableFn(cho, jung);\n  const jongChar = yield new Y(maybeComplete);\n  const jong = jongNum[jongChar];\n  if (jong === null) {\n    return new Y(maybeComplete);\n  }\n  if (!Number.isInteger(jong)) {\n    return new Y(maybeComplete, jong);\n  }\n  return new Y(composeSyllableFn(cho, jung, jong));\n}\n/*\nexport default function (choChar, jungChar, jongChar) {\n  const cho = choNum[choChar];\n  const jung = jungNum[jungChar];\n  const jong = jongChar ? jongNum[jongChar] : 0;\n  if (!Number.isInteger(cho)) {\n    throw new Error(`\"${choChar}\" is not a valid cho character`);\n  } if (!Number.isInteger(jung)) {\n    if (jungChar === undefined) {\n      throw new Error('You must provide a jung character to make a syllable');\n    }\n    throw new Error(`\"${jungChar}\" is not a valid jung character`);\n  } if (jongChar && !Number.isInteger(jong)) {\n    throw new Error(`\"${jongChar}\" is not a valid jong character`);\n  }\n  return String.fromCodePoint(cho * 588 + jung * 28 + jong + syllables.start);\n}\n*/\n","import assertChar from './assertChar';\nimport { isSyllable, syllables } from './unicode/blocks';\nimport { cho, jung, jong } from './unicode/syllable';\n\nexport default ((syllable) => {\n  assertChar(syllable);\n  if (!isSyllable(syllable)) {\n    throw new Error('Decomposing a syllable requires a syllable to decompose!');\n  }\n  const code = syllable.codePointAt(0) - syllables.start;\n  const jongNum = code % 28;\n  const q = (code - jongNum) / 28;\n  const jungNum = q % 21;\n  const choNum = 0 | q / 21;\n  return [cho[choNum], jung[jungNum], jong[jongNum]].filter(v => v);\n});\n","import Y from './ComposeGeneratorYield';\n\nconst construct = (gen, yieldObj) => {\n  const fn = (...ary) => {\n    if (yieldObj.done) {\n      const val = yieldObj.value;\n      console.log(yieldObj);\n      return construct(gen, {\n        done: true,\n        value: new Y(val.result, val.remainder.concat(ary)),\n      });\n    }\n    let currentYieldObj = yieldObj;\n    while (ary.length && !currentYieldObj.done) {\n      currentYieldObj = gen.next(ary.shift());\n    }\n    return construct(gen, currentYieldObj);\n  };\n  const val = yieldObj.value;\n  if (val instanceof Y) {\n    fn.result = val.result;\n    fn.remainder = val.remainder;\n  }\n  fn.done = yieldObj.done;\n  return fn;\n};\nexport default ((generator, ...args) => (...ary) => {\n  const gen = generator(...args);\n  const yieldObj = gen.next();\n  yieldObj.value = {};\n  yieldObj.value.remainder = [];\n  return construct(gen, yieldObj)(...ary);\n});\n","// if you're gonna copy this part, at least give me credit.\n// I had to do all of this manually.\nexport const jamo = {\n  ᄀ: 'ㄱ',\n  ᄁ: ['ㄱ', 'ㄱ'],\n  ᄂ: 'ㄴ',\n  ᄃ: 'ㄷ',\n  ᄄ: ['ㄷ', 'ㄷ'],\n  ᄅ: 'ㄹ',\n  ᄆ: 'ㅁ',\n  ᄇ: 'ㅂ',\n  ᄈ: ['ㅂ', 'ㅂ'],\n  ᄉ: 'ㅅ',\n  ᄊ: ['ㅅ', 'ㅅ'],\n  ᄋ: 'ㅇ',\n  ᄌ: 'ㅈ',\n  ᄍ: ['ㅈ', 'ㅈ'],\n  ᄎ: 'ㅊ',\n  ᄏ: 'ㅋ',\n  ᄐ: 'ㅌ',\n  ᄑ: 'ㅍ',\n  ᄒ: 'ㅎ',\n  ᄓ: ['ㄴ', 'ㄱ'],\n  ᄔ: ['ㄴ', 'ㄴ'],\n  ᄕ: ['ㄴ', 'ㄷ'],\n  ᄖ: ['ㄴ', 'ㅂ'],\n  ᄗ: ['ㄷ', 'ㄱ'],\n  ᄘ: ['ㄹ', 'ㄴ'],\n  ᄙ: ['ㄹ', 'ㄹ'],\n  ᄚ: ['ㄹ', 'ㅎ'],\n  ᄛ: ['ㄹ', 'ㅇ'],\n  ᄜ: ['ㅁ', 'ㅂ'],\n  ᄝ: 'ㅱ',\n  ᄞ: ['ㅂ', 'ㄱ'],\n  ᄟ: ['ㅂ', 'ㄴ'],\n  ᄠ: ['ㅂ', 'ㄷ'],\n  ᄡ: ['ㅂ', 'ㅅ'],\n  ᄢ: ['ㅂ', 'ㅅ', 'ㄱ'],\n  ᄣ: ['ㅂ', 'ㅅ', 'ㄷ'],\n  ᄤ: ['ㅂ', 'ㅅ', 'ㅂ'],\n  ᄥ: ['ㅂ', 'ㅅ', 'ㅅ'],\n  ᄦ: ['ㅂ', 'ㅅ', 'ㅈ'],\n  ᄧ: ['ㅂ', 'ㅈ'],\n  ᄨ: ['ㅂ', 'ㅊ'],\n  ᄩ: ['ㅂ', 'ㅌ'],\n  ᄪ: ['ㅂ', 'ㅍ'],\n  ᄫ: 'ㅸ',\n  ᄬ: 'ㅹ',\n  ᄭ: ['ㅅ', 'ㄱ'],\n  ᄮ: ['ㅅ', 'ㄴ'],\n  ᄯ: ['ㅅ', 'ㄷ'],\n  ᄰ: ['ㅅ', 'ㄹ'],\n  ᄱ: ['ㅅ', 'ㅁ'],\n  ᄲ: ['ㅅ', 'ㅂ'],\n  ᄳ: ['ㅅ', 'ㅂ', 'ㄱ'],\n  ᄴ: ['ㅅ', 'ㅅ', 'ㅅ'],\n  ᄵ: ['ㅅ', 'ㅇ'],\n  ᄶ: ['ㅅ', 'ㅈ'],\n  ᄷ: ['ㅅ', 'ㅊ'],\n  ᄸ: ['ㅅ', 'ㅋ'],\n  ᄹ: ['ㅅ', 'ㅌ'],\n  ᄺ: ['ㅅ', 'ㅍ'],\n  ᄻ: ['ㅅ', 'ㅎ'],\n  ᄼ: null,\n  ᄽ: null,\n  ᄾ: null,\n  ᄿ: null,\n  ᅀ: 'ㅿ',\n  ᅁ: ['ㅇ', 'ㄱ'],\n  ᅂ: ['ㅇ', 'ㄷ'],\n  ᅃ: ['ㅇ', 'ㅁ'],\n  ᅄ: ['ㅇ', 'ㅂ'],\n  ᅅ: ['ㅇ', 'ㅅ'],\n  ᅆ: ['ㅇ', 'ㅿ'],\n  ᅇ: ['ㅇ', 'ㅇ'],\n  ᅈ: ['ㅇ', 'ㅈ'],\n  ᅉ: ['ㅇ', 'ㅊ'],\n  ᅊ: ['ㅇ', 'ㅌ'],\n  ᅋ: ['ㅇ', 'ㅍ'],\n  ᅌ: 'ㆁ',\n  ᅍ: ['ㅈ', 'ㅇ'],\n  ᅎ: null,\n  ᅏ: null,\n  ᅐ: null,\n  ᅑ: null,\n  ᅒ: ['ㅊ', 'ㅋ'],\n  ᅓ: ['ㅊ', 'ㅎ'],\n  ᅔ: null,\n  ᅕ: null,\n  ᅖ: ['ㅂ', 'ㅂ'],\n  ᅗ: 'ㆄ',\n  ᅘ: ['ㅎ', 'ㅎ'],\n  ᅙ: 'ㆆ',\n  ᅚ: ['ㄱ', 'ㄷ'],\n  ᅛ: ['ㄱ', 'ㅅ'],\n  ᅜ: ['ㄱ', 'ㅈ'],\n  ᅝ: ['ㄱ', 'ㅎ'],\n  ᅞ: ['ㄷ', 'ㄹ'],\n  ᅡ: 'ㅏ',\n  ᅢ: 'ㅐ',\n  ᅣ: 'ㅑ',\n  ᅤ: 'ㅒ',\n  ᅥ: 'ㅓ',\n  ᅦ: 'ㅔ',\n  ᅧ: 'ㅕ',\n  ᅨ: 'ㅖ',\n  ᅩ: 'ㅗ',\n  ᅪ: ['ㅗ', 'ㅏ'],\n  ᅫ: ['ㅗ', 'ㅐ'],\n  ᅬ: ['ㅗ', 'ㅣ'],\n  ᅭ: 'ㅛ',\n  ᅮ: 'ㅜ',\n  ᅯ: ['ㅜ', 'ㅓ'],\n  ᅰ: ['ㅜ', 'ㅔ'],\n  ᅱ: ['ㅜ', 'ㅣ'],\n  ᅲ: 'ㅠ',\n  ᅳ: 'ㅡ',\n  ᅴ: ['ㅡ', 'ㅣ'],\n  ᅵ: 'ㅣ',\n  ᅶ: ['ㅏ', 'ㅗ'],\n  ᅷ: ['ㅏ', 'ㅜ'],\n  ᅸ: ['ㅑ', 'ㅗ'],\n  ᅹ: ['ㅑ', 'ㅛ'],\n  ᅺ: ['ㅓ', 'ㅗ'],\n  ᅻ: ['ㅓ', 'ㅜ'],\n  ᅼ: ['ㅓ', 'ㅡ'],\n  ᅽ: ['ㅕ', 'ㅗ'],\n  ᅾ: ['ㅕ', 'ㅜ'],\n  ᅿ: ['ㅗ', 'ㅓ'],\n  ᆀ: ['ㅔ', 'ㅗ'],\n  ᆁ: ['ㅖ', 'ㅗ'],\n  ᆂ: ['ㅗ', 'ㅗ'],\n  ᆃ: ['ㅗ', 'ㅜ'],\n  ᆄ: ['ㅛ', 'ㅑ'],\n  ᆅ: ['ㅛ', 'ㅒ'],\n  ᆆ: ['ㅛ', 'ㅕ'],\n  ᆇ: ['ㅛ', 'ㅗ'],\n  ᆈ: ['ㅛ', 'ㅣ'],\n  ᆉ: ['ㅜ', 'ㅏ'],\n  ᆊ: ['ㅜ', 'ㅐ'],\n  ᆋ: ['ㅜ', 'ㅓ', 'ㅡ'],\n  ᆌ: ['ㅜ', 'ㅖ'],\n  ᆍ: ['ㅜ', 'ㅜ'],\n  ᆎ: ['ㅠ', 'ㅏ'],\n  ᆏ: ['ㅠ', 'ㅓ'],\n  ᆐ: ['ㅠ', 'ㅔ'],\n  ᆑ: ['ㅠ', 'ㅕ'],\n  ᆒ: ['ㅠ', 'ㅔ'],\n  ᆓ: ['ㅠ', 'ㅜ'],\n  ᆔ: ['ㅠ', 'ㅣ'],\n  ᆕ: ['ㅡ', 'ㅜ'],\n  ᆖ: ['ㅡ', 'ㅡ'],\n  ᆗ: ['ㅡ', 'ㅣ', 'ㅜ'],\n  ᆘ: ['ㅣ', 'ㅏ'],\n  ᆙ: ['ㅣ', 'ㅑ'],\n  ᆚ: ['ㅣ', 'ㅗ'],\n  ᆛ: ['ㅣ', 'ㅜ'],\n  ᆜ: ['ㅣ', 'ㅡ'],\n  ᆝ: null,\n  ᆞ: 'ㆍ',\n  ᆟ: ['ㆍ', 'ㅓ'],\n  ᆠ: ['ㆍ', 'ㅜ'],\n  ᆡ: ['ㆍ', 'ㅣ'],\n  ᆢ: ['ㆍ', 'ㆍ'],\n  ᆣ: ['ㅏ', 'ㅡ'],\n  ᆤ: ['ㅑ', 'ㅜ'],\n  ᆥ: ['ㅕ', 'ㅑ'],\n  ᆦ: ['ㅗ', 'ㅑ'],\n  ᆧ: ['ㅗ', 'ㅒ'],\n  ᆨ: 'ㄱ',\n  ᆩ: ['ㄱ', 'ㄱ'],\n  ᆪ: ['ㄱ', 'ㅅ'],\n  ᆫ: 'ㄴ',\n  ᆬ: ['ㄴ', 'ㅈ'],\n  ᆭ: ['ㄴ', 'ㅎ'],\n  ᆮ: 'ㄷ',\n  ᆯ: 'ㄹ',\n  ᆰ: ['ㄹ', 'ㄱ'],\n  ᆱ: ['ㄹ', 'ㅁ'],\n  ᆲ: ['ㄹ', 'ㅂ'],\n  ᆳ: ['ㄹ', 'ㅅ'],\n  ᆴ: ['ㄹ', 'ㅌ'],\n  ᆵ: ['ㄹ', 'ㅍ'],\n  ᆶ: ['ㄹ', 'ㅎ'],\n  ᆷ: 'ㅁ',\n  ᆸ: 'ㅂ',\n  ᆹ: ['ㅂ', 'ㅅ'],\n  ᆺ: 'ㅅ',\n  ᆻ: ['ㅅ', 'ㅅ'],\n  ᆼ: 'ㅇ',\n  ᆽ: 'ㅈ',\n  ᆾ: 'ㅊ',\n  ᆿ: 'ㅋ',\n  ᇀ: 'ㅌ',\n  ᇁ: 'ㅍ',\n  ᇂ: 'ㅎ',\n  ᇃ: ['ㄱ', 'ㄹ'],\n  ᇄ: ['ㄱ', 'ㅅ', 'ㄱ'],\n  ᇅ: ['ㄴ', 'ㄱ'],\n  ᇆ: ['ㄴ', 'ㄷ'],\n  ᇇ: ['ㄴ', 'ㅅ'],\n  ᇈ: ['ㄴ', 'ㅿ'],\n  ᇉ: ['ㄴ', 'ㅌ'],\n  ᇊ: ['ㄷ', 'ㄱ'],\n  ᇋ: ['ㄷ', 'ㄹ'],\n  ᇌ: ['ㄹ', 'ㄱ', 'ㅅ'],\n  ᇍ: ['ㄹ', 'ㄴ'],\n  ᇎ: ['ㄹ', 'ㄷ'],\n  ᇏ: ['ㄹ', 'ㄷ', 'ㅎ'],\n  ᇐ: ['ㄹ', 'ㄹ'],\n  ᇑ: ['ㄹ', 'ㅁ', 'ㄱ'],\n  ᇒ: ['ㄹ', 'ㅁ', 'ㅅ'],\n  ᇓ: ['ㄹ', 'ㅂ', 'ㅅ'],\n  ᇔ: ['ㄹ', 'ㅂ', 'ㅎ'],\n  ᇕ: ['ㄹ', 'ㅸ'],\n  ᇖ: ['ㄹ', 'ㅅ', 'ㅅ'],\n  ᇗ: ['ㄹ', ''],\n  ᇘ: ['ㄹ', 'ㅋ'],\n  ᇙ: ['ㄹ', 'ㆆ'],\n  ᇚ: ['ㅁ', 'ㄱ'],\n  ᇛ: ['ㅁ', 'ㄹ'],\n  ᇜ: ['ㅁ', 'ㅂ'],\n  ᇝ: ['ㅁ', 'ㅅ'],\n  ᇞ: ['ㅁ', 'ㅅ', 'ㅅ'],\n  ᇟ: ['ㅁ', 'ㅿ'],\n  ᇠ: ['ㅁ', 'ㅊ'],\n  ᇡ: ['ㅁ', 'ㅎ'],\n  ᇢ: 'ㅱ',\n  ᇣ: ['ㅂ', 'ㄹ'],\n  ᇤ: ['ㅂ', 'ㅍ'],\n  ᇥ: ['ㅂ', 'ㅎ'],\n  ᇦ: 'ㅸ',\n  ᇧ: ['ㅅ', 'ㄱ'],\n  ᇨ: ['ㅅ', 'ㄷ'],\n  ᇩ: ['ㅅ', 'ㄹ'],\n  ᇪ: ['ㅅ', 'ㅂ'],\n  ᇫ: 'ㅿ',\n  ᇬ: ['ㆁ', 'ㄱ'],\n  ᇭ: ['ㆁ', 'ㄱ', 'ㄱ'],\n  ᇮ: ['ㆁ', 'ㆁ'],\n  ᇯ: ['ㆁ', 'ㅋ'],\n  ᇰ: 'ㆁ',\n  ᇱ: ['ㆁ', 'ㅅ'],\n  ᇲ: ['ㆁ', 'ㅿ'],\n  ᇳ: ['ㅍ', 'ㅂ'],\n  ᇴ: 'ㆄ',\n  ᇵ: ['ㅎ', 'ㄴ'],\n  ᇶ: ['ㅎ', 'ㄹ'],\n  ᇷ: ['ㅎ', 'ㅁ'],\n  ᇸ: ['ㅎ', 'ㅂ'],\n  ᇹ: 'ㆆ',\n  ᇺ: ['ㄱ', 'ㄴ'],\n  ᇻ: ['ㄱ', 'ㅂ'],\n  ᇼ: ['ㄱ', 'ㅊ'],\n  ᇽ: ['ㄱ', 'ㅋ'],\n  ᇾ: ['ㄱ', 'ㅎ'],\n  ᇿ: ['ㄴ', 'ㄴ'],\n};\nexport const compatibilityJamo = {\n  // this object is missing a lot of characters in the block since\n  // this file maps archaic characters to compatibilityJamo.\n  ㄲ: ['ㄱ', 'ㄱ'],\n  ㄳ: ['ㄱ', 'ㅅ'],\n  ㄵ: ['ㄴ', 'ㅈ'],\n  ㄶ: ['ㄴ', 'ㅎ'],\n  ㄸ: ['ㄷ', 'ㄷ'],\n  ㄻ: ['ㄹ', 'ㅁ'],\n  ㄺ: ['ㄹ', 'ㄱ'],\n  ㄼ: ['ㄹ', 'ㅂ'],\n  ㄽ: ['ㄹ', 'ㅅ'],\n  ㄾ: ['ㄹ', 'ㅌ'],\n  ㄿ: ['ㄹ', 'ㅍ'],\n  ㅀ: ['ㄹ', 'ㅎ'],\n  ㅃ: ['ㅂ', 'ㅂ'],\n  ㅄ: ['ㅂ', 'ㅅ'],\n  ㅆ: ['ㅅ', 'ㅅ'],\n  ㅉ: ['ㅈ', 'ㅈ'],\n  ㅘ: ['ㅗ', 'ㅏ'],\n  ㅙ: ['ㅗ', 'ㅐ'],\n  ㅚ: ['ㅗ', 'ㅣ'],\n  ㅝ: ['ㅜ', 'ㅓ'],\n  ㅞ: ['ㅜ', 'ㅔ'],\n  ㅟ: ['ㅜ', 'ㅣ'],\n  ㅢ: ['ㅡ', 'ㅣ'],\n  ㅥ: ['ㄴ', 'ㄴ'],\n  ㅦ: ['ㄴ', 'ㄷ'],\n  ㅧ: ['ㄴ', 'ㅅ'],\n  ㅨ: ['ㄴ', 'ㅿ'],\n  ㅩ: ['ㄹ', 'ㄱ', 'ㅅ'],\n  ㅪ: ['ㄹ', 'ㄷ'],\n  ㅫ: ['ㄹ', 'ㅂ', 'ㅅ'],\n  ㅬ: ['ㄹ', 'ㅿ'],\n  ㅭ: ['ㄹ', 'ㆆ'],\n  ㅮ: ['ㅁ', 'ㅂ'],\n  ㅯ: ['ㅁ', 'ㅅ'],\n  ㅰ: ['ㅁ', 'ㅿ'],\n  ㅲ: ['ㅂ', 'ㄱ'],\n  ㅳ: ['ㅂ', 'ㄷ'],\n  ㅴ: ['ㅂ', 'ㅅ', 'ㄱ'],\n  ㅵ: ['ㅂ', 'ㅅ', 'ㄷ'],\n  ㅶ: ['ㅂ', 'ㅈ'],\n  ㅷ: ['ㅂ', 'ㅌ'],\n  ㅺ: ['ㅅ', 'ㄱ'],\n  ㅻ: ['ㅅ', 'ㄴ'],\n  ㅼ: ['ㅅ', 'ㄷ'],\n  ㅽ: ['ㅅ', 'ㅂ'],\n  ㅾ: ['ㅅ', 'ㅈ'],\n  ㆀ: ['ㅇ', 'ㅇ'],\n  ㆂ: ['ㆁ', 'ㅅ'],\n  ㆃ: ['ㆁ', 'ㅿ'],\n  ㆅ: ['ㅎ', 'ㅎ'],\n  ㆇ: ['ㅛ', 'ㅑ'],\n  ㆈ: ['ㅛ', 'ㅒ'],\n  ㆉ: ['ㅛ', 'ㅣ'],\n  ㆊ: ['ㅠ', 'ㅕ'],\n  ㆋ: ['ㅠ', 'ㅖ'],\n  ㆌ: ['ㅠ', 'ㅣ'],\n  ㆎ: ['ㆍ', 'ㅣ'],\n};\nexport const jamoExtendedA = {\n  ꥠ: ['ㄷ', 'ㅁ'],\n  ꥡ: ['ㄷ', 'ㅂ'],\n  ꥢ: ['ㄷ', 'ㅅ'],\n  ꥣ: ['ㄷ', 'ㅈ'],\n  ꥤ: ['ㄹ', 'ㄱ'],\n  ꥥ: ['ㄹ', 'ㄱ', 'ㄱ'],\n  ꥦ: ['ㄹ', 'ㄷ'],\n  ꥧ: ['ㄹ', 'ㄷ', 'ㄷ'],\n  ꥨ: ['ㄹ', 'ㅁ'],\n  ꥩ: ['ㄹ', 'ㅂ'],\n  ꥪ: ['ㄹ', 'ㅂ', 'ㅂ'],\n  ꥫ: ['ㄹ', 'ㅸ'],\n  ꥬ: ['ㄹ', 'ㅅ'],\n  ꥭ: ['ㄹ', 'ㅈ'],\n  ꥮ: ['ㄹ', 'ㅋ'],\n  ꥯ: ['ㅁ', 'ㄱ'],\n  ꥰ: ['ㅁ', 'ㄷ'],\n  ꥱ: ['ㅁ', 'ㅅ'],\n  ꥲ: ['ㅂ', 'ㅅ', 'ㅌ'],\n  ꥳ: ['ㅂ', 'ㅋ'],\n  ꥴ: ['ㅂ', 'ㅎ'],\n  ꥵ: ['ㅅ', 'ㅅ', 'ㅂ'],\n  ꥶ: ['ㅇ', 'ㄹ'],\n  ꥷ: ['ㅇ', 'ㅎ'],\n  ꥸ: ['ㅈ', 'ㅈ', 'ㅎ'],\n  ꥹ: ['ㅌ', 'ㅌ'],\n  ꥺ: ['ㅍ', 'ㅎ'],\n  ꥻ: ['ㅎ', 'ㅅ'],\n  ꥼ: ['ㆆ', 'ㆆ'],\n};\nexport const jamoExtendedB = {\n  ힰ: ['ㅗ', 'ㅕ'],\n  ힱ: ['ㅗ', 'ㅗ', 'ㅣ'],\n  ힲ: ['ㅛ', 'ㅏ'],\n  ힳ: ['ㅛ', 'ㅐ'],\n  ힴ: ['ㅛ', 'ㅓ'],\n  ힵ: ['ㅜ', 'ㅕ'],\n  ힶ: ['ㅜ', 'ㅣ', 'ㅣ'],\n  ힷ: ['ㅠ', 'ㅐ'],\n  ힸ: ['ㅠ', 'ㅗ'],\n  ힹ: ['ㅡ', 'ㅏ'],\n  ힺ: ['ㅡ', 'ㅓ'],\n  ힻ: ['ㅡ', 'ㅔ'],\n  ힼ: ['ㅡ', 'ㅗ'],\n  ힽ: ['ㅣ', 'ㅏ', 'ㅗ'],\n  ힾ: ['ㅣ', 'ㅒ'],\n  ힿ: ['ㅣ', 'ㅕ'],\n  ퟀ: ['ㅣ', 'ㅖ'],\n  ퟁ: ['ㅣ', 'ㅗ', 'ㅣ'],\n  ퟂ: ['ㅣ', 'ㅛ'],\n  ퟃ: ['ㅣ', 'ㅠ'],\n  ퟄ: ['ㅣ', 'ㅣ'],\n  ퟅ: ['ㆍ', 'ㅏ'],\n  ퟆ: ['ㆍ', 'ㅔ'],\n  ퟋ: ['ㄴ', ''],\n  ퟌ: ['ㄴ', ''],\n  ퟍ: ['ㄷ', 'ㄷ'],\n  ퟎ: ['ㄷ', 'ㄷ', 'ㅂ'],\n  ퟏ: ['ㄷ', 'ㅂ'],\n  ퟐ: ['ㄷ', 'ㅅ'],\n  ퟑ: ['ㄷ', 'ㅅ', 'ㄱ'],\n  ퟒ: ['ㄷ', 'ㅈ'],\n  ퟓ: ['ㄷ', 'ㅊ'],\n  ퟔ: ['ㄷ', 'ㅌ'],\n  ퟕ: ['ㄹ', 'ㄱ', 'ㄱ'],\n  ퟖ: ['ㄹ', 'ㄱ', 'ㅎ'],\n  ퟗ: ['ㄹ', 'ㄹ', 'ㅋ'],\n  ퟘ: ['ㄹ', 'ㅁ', 'ㅎ'],\n  ퟙ: ['ㄹ', 'ㅂ', 'ㄷ'],\n  ퟚ: ['ㄹ', 'ㅂ', 'ㅍ'],\n  ퟛ: ['ㄹ', 'ㆁ'],\n  ퟜ: ['ㄹ', 'ㆆ', 'ㅎ'],\n  ퟝ: null,\n  ퟞ: ['ㅁ', 'ㄴ'],\n  ퟟ: ['ㅁ', 'ㄴ', 'ㄴ'],\n  ퟠ: ['ㅁ', 'ㅁ'],\n  ퟡ: ['ㅁ', 'ㅂ', 'ㅅ'],\n  ퟢ: ['ㅁ', 'ㅈ'],\n  ퟣ: ['ㅂ', 'ㄷ'],\n  ퟤ: ['ㅂ', 'ㄹ', 'ㅍ'],\n  ퟥ: ['ㅂ', 'ㅁ'],\n  ퟦ: ['ㅂ', 'ㅂ'],\n  ퟧ: ['ㅂ', 'ㅅ', 'ㄷ'],\n  ퟨ: ['ㅂ', 'ㅈ'],\n  ퟩ: ['ㅂ', 'ㅊ'],\n  ퟪ: ['ㅅ', 'ㅁ'],\n  ퟫ: ['ㅅ', 'ㅸ'],\n  ퟬ: ['ㅅ', 'ㅅ', 'ㄱ'],\n  ퟭ: ['ㅅ', 'ㅅ', 'ㄷ'],\n  ퟮ: ['ㅅ', 'ㅿ'],\n  ퟯ: ['ㅅ', 'ㅈ'],\n  ퟰ: ['ㅅ', 'ㅊ'],\n  ퟱ: ['ㅅ', 'ㅌ'],\n  ퟲ: ['ㅅ', 'ㅎ'],\n  ퟳ: ['ㅿ', 'ㅂ'],\n  ퟴ: ['ㅿ', 'ㅸ'],\n  ퟵ: ['ㆁ', 'ㅁ'],\n  ퟶ: ['ㆁ', 'ㅎ'],\n  ퟷ: ['ㅈ', 'ㅂ'],\n  ퟸ: ['ㅈ', 'ㅂ', 'ㅂ'],\n  ퟹ: ['ㅈ', 'ㅈ'],\n  ퟺ: ['ㅍ', 'ㅅ'],\n  ퟻ: ['ㅍ', 'ㅌ'],\n};\nexport const halfwidth = {\n  ﾡ: 'ㄱ',\n  ﾢ: ['ㄱ', 'ㄱ'],\n  ﾣ: ['ㄱ', 'ㅅ'],\n  ﾤ: 'ㄴ',\n  ﾥ: ['ㄴ', 'ㅈ'],\n  ﾦ: ['ㄴ', 'ㅎ'],\n  ﾧ: 'ㄷ',\n  ﾨ: ['ㄷ', 'ㄷ'],\n  ﾩ: 'ㄹ',\n  ﾪ: ['ㄹ', 'ㄱ'],\n  ﾫ: ['ㄹ', 'ㅁ'],\n  ﾬ: ['ㄹ', 'ㅂ'],\n  ﾭ: ['ㄹ', 'ㅅ'],\n  ﾮ: ['ㄹ', 'ㅌ'],\n  ﾯ: ['ㄹ', 'ㅍ'],\n  ﾰ: ['ㄹ', 'ㅎ'],\n  ﾱ: 'ㅁ',\n  ﾲ: 'ㅂ',\n  ﾳ: ['ㅂ', 'ㅂ'],\n  ﾴ: ['ㅂ', 'ㅅ'],\n  ﾵ: 'ㅅ',\n  ﾶ: ['ㅅ', 'ㅅ'],\n  ﾷ: 'ㅇ',\n  ﾸ: 'ㅈ',\n  ﾹ: ['ㅈ', 'ㅈ'],\n  ﾺ: 'ㅊ',\n  ﾻ: 'ㅋ',\n  ﾼ: 'ㅌ',\n  ﾽ: 'ㅍ',\n  ﾾ: 'ㅎ',\n  ￂ: 'ㅏ',\n  ￃ: 'ㅐ',\n  ￄ: 'ㅑ',\n  ￅ: 'ㅒ',\n  ￆ: 'ㅓ',\n  ￇ: 'ㅔ',\n  ￊ: 'ㅕ',\n  ￋ: 'ㅖ',\n  ￌ: 'ㅗ',\n  ￍ: ['ㅗ', 'ㅏ'],\n  ￎ: ['ㅗ', 'ㅐ'],\n  ￏ: ['ㅗ', 'ㅣ'],\n  ￒ: 'ㅛ',\n  ￓ: 'ㅜ',\n  ￔ: ['ㅜ', 'ㅓ'],\n  ￕ: ['ㅜ', 'ㅔ'],\n  ￖ: ['ㅜ', 'ㅣ'],\n  ￗ: 'ㅠ',\n  ￚ: 'ㅡ',\n  ￛ: ['ㅡ', 'ㅣ'],\n  ￜ: 'ㅣ',\n};\nconst all = Object.assign({}, jamo, compatibilityJamo, jamoExtendedA, jamoExtendedB, halfwidth);\nexport default (all);\n","// tries to transform everything into disassembled standard hangul\nimport { isHangul, isStandardHangul } from './unicode/groups';\nimport { isSyllable } from './unicode/blocks';\nimport { makeAry } from './array';\nimport mappings from './unicode/mappings';\n\nexport function transformChar(char) {\n  if (isHangul(char) && !isSyllable(char)) {\n    // this if-statement isn't REALLY needed\n    const comp = mappings[char];\n    if (comp) {\n      return comp;\n    }\n    return char;\n  }\n  return char;\n}\nexport function transformNonStandardChar(char) {\n  if (isStandardHangul(char)) {\n    return transformChar(char);\n  }\n  return char;\n}\nexport default function transform(str, ignoreStandard = false) {\n  const ary = makeAry(str);\n  if (ignoreStandard) {\n    return ary.split``.map(transformNonStandardChar);\n  }\n  return ary.split``.map(transformChar);\n}\nexport function transformToString(str) {\n  return transform(str).flat();\n}\n","import { isSyllable } from './unicode/blocks';\nimport { isConsonant, isVowel } from './unicode/characters';\nimport {\n  isHangul,\n  isStandardHangul,\n  isAllHangul,\n  isAllStandardHangul,\n  containsHangul,\n  containsStandardHangul,\n} from './unicode/groups';\nimport assertChar from './assertChar';\nimport composeComplex from './composeComplex';\nimport composeSyllableGenerator from './composeSyllable';\nimport decomposeSyllable from './decomposeSyllable';\nimport fuel from './fuel';\nimport transform, { transformChar } from './transformer';\n\nexport function isComplex(char) {\n  assertChar(char);\n  return !!(transformChar(char).length - 1);\n}\nexport const composeSyllable = fuel(composeSyllableGenerator);\nexport {\n  isSyllable,\n  isHangul,\n  isStandardHangul,\n  isAllHangul,\n  isAllStandardHangul,\n  containsHangul,\n  containsStandardHangul,\n  isConsonant,\n  isVowel,\n  composeComplex,\n  composeSyllableGenerator,\n  decomposeSyllable,\n  transform,\n};\n"],"names":["blocks.isCompatibilityJamo","blocks.isSyllable","blocks.isJamo","blocks.isJamoExtendedA","blocks.isJamoExtendedB","blocks.isHalfwidth","cho","jung","jong","Y","jongNum","jungNum","choNum","jamo","compatibilityJamo","jamoExtendedA","jamoExtendedB","halfwidth","mappings"],"mappings":"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AG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC;EACd,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,CAAC,CAAC;AACF,EAAO,MAAMC,mBAAiB,GAAG;EACjC;EACA;EACA,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;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AC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC;EACd,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC;EACd,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,IAAI;EACT,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpB,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACf,E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"}